List(Causal, Event) => Workscape said it will gain about 200 new clients as a result of the transaction
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => Workscape said it will gain about 200 new clients
	controlled (CM_event, CM, Entity) => it will gain about 200 new clients
	controller (CM_NP, CM, Entity) => transaction
	------------------------------


List(Causal, Event) => failure of those bids , the largest in Italian banking , has led to a debate
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => failure of those bids
	controlled (CM_NP, CM, Entity) => debate
	------------------------------


List(Causal, Event) => we heard that Obasanjo was killed , '' he said , referring to rumors that suddenly swept the country and caused riots in Lagos
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => caused
	controlled (CM_NP, CM, Entity) => riots in Lagos
	controller (CM_NP, CM, Entity) => rumors
	controller (CM_event, CM, Entity) => we heard that Obasanjo was killed , '' he said , referring to rumors
	controller (CM_event, CM, Entity) => referring to rumors
	controller (CM_event, CM, Entity) => rumors that suddenly swept the country
	------------------------------


List(Causal, Event) => strike at GM last year resulted in a special charge of $ 450 million for Delphi
	------------------------------
	Rule => result_1
	Type => EventMention
	------------------------------
	trigger => resulted
	controlled (CM_NP, CM, Entity) => special charge of $ 450 million for Delphi
	controller (CM_NP, CM, Entity) => strike
	controller (CM_NP, CM, Entity) => last year
	------------------------------


List(Causal, Event) => we heard that Obasanjo was killed , '' he said , referring to rumors that suddenly swept the country and caused riots in Lagos
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => caused
	controlled (CM_NP, CM, Entity) => riots in Lagos
	controller (CM_NP, CM, Entity) => rumors
	controller (CM_event, CM, Entity) => we heard that Obasanjo was killed , '' he said , referring to rumors
	controller (CM_event, CM, Entity) => referring to rumors
	controller (CM_event, CM, Entity) => rumors that suddenly swept the country
	------------------------------


List(Causal, Event) => Sure , you 're always going to have some jerks who hug the beach and cause accidents
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => accidents
	controller (CM_NP, CM, Entity) => jerks
	controller (CM_event, CM, Entity) => Sure , you 're always going to have some jerks
	controller (CM_event, CM, Entity) => have some jerks
	------------------------------


List(Causal, Event) => noise , wake and wildlife impacts of personal watercraft have led to growing moves
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => noise , wake and wildlife impacts of personal watercraft
	controller (CM_NP, CM, Entity) => noise , wake and wildlife impacts of personal watercraft
	controller (CM_NP, CM, Entity) => wake
	controller (CM_NP, CM, Entity) => noise , wake and wildlife impacts of personal watercraft
	controller (CM_NP, CM, Entity) => wildlife impacts
	controlled (CM_NP, CM, Entity) => growing moves
	------------------------------


List(Causal, Event) => result of the attacks , both sites were almost immediately shut
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => sites were almost immediately shut
	controller (CM_NP, CM, Entity) => attacks
	------------------------------


List(Causal, Event) => street battles in the 1970s cost more than 5,000 lives and led to such chaos
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => street battles in the 1970s
	controller (CM_event, CM, Entity) => street battles in the 1970s cost more than 5,000 lives
	controlled (CM_NP, CM, Entity) => such chaos
	------------------------------


List(Causal, Event) => bank said it was the exit interview that caused it to begin an internal investigation of unclaimed funds and to alert federal authorities to the problem
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => caused
	controlled (CM_event, CM, Entity) => it to begin an internal investigation of unclaimed funds
	controlled (CM_event, CM, Entity) => it to begin an internal investigation of unclaimed funds and to alert federal authorities to the problem
	controlled (CM_event, CM, Entity) => it to begin an internal investigation of unclaimed funds and to alert federal authorities to the problem
	controller (CM_NP, CM, Entity) => exit interview
	controller (CM_event, CM, Entity) => bank said it was the exit interview
	controller (CM_NP, CM, Entity) => exit
	controller (CM_NP, CM, Entity) => exit interview
	controller (CM_event, CM, Entity) => bank said it was the exit interview
	------------------------------


List(Causal, Event) => he had benefited as a result of his decision
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => he had benefited
	controller (CM_NP, CM, Entity) => decision
	------------------------------


List(Causal, Event) => he had benefited as a result of his decision
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => he had benefited
	controller (CM_NP, CM, Entity) => decision
	------------------------------


List(Causal, Event) => he had benefited as a result of his decision
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => he had benefited
	controller (CM_NP, CM, Entity) => decision
	------------------------------


List(Causal, Event) => cigarettes cause fatal disease
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => fatal disease
	controller (CM_NP, CM, Entity) => cigarettes
	------------------------------


List(Causal, Event) => lackluster play is the result of the Galaxy
	------------------------------
	Rule => result_3
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_NP, CM, Entity) => lackluster play
	controller (CM_NP, CM, Entity) => Galaxy
	------------------------------


List(Causal, Event) => Tuleh , a collection of luxurious and romantic clothes , including 1950s-style beaded dresses , lavishly printed cocktail pajamas and sable stoles , was created by Patner and Bradley
	------------------------------
	Rule => create_1
	Type => EventMention
	------------------------------
	trigger => created
	controlled (CM_NP, CM, Entity) => Tuleh
	controlled (CM_NP, CM, Entity) => collection of luxurious and romantic clothes , including 1950s-style beaded dresses , lavishly printed cocktail pajamas and sable stoles
	controller (CM_NP, CM, Entity) => Patner
	controller (CM_NP, CM, Entity) => Bradley
	------------------------------


List(Causal, Event) => bonus led to the purchase of a house and a foothold in the middle class
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => bonus
	controlled (CM_NP, CM, Entity) => purchase of a house
	controlled (CM_NP, CM, Entity) => foothold in the middle class
	------------------------------


List(Causal, Event) => Tuleh , a collection of luxurious and romantic clothes , including 1950s-style beaded dresses , lavishly printed cocktail pajamas and sable stoles , was created by Patner and Bradley
	------------------------------
	Rule => create_1
	Type => EventMention
	------------------------------
	trigger => created
	controlled (CM_NP, CM, Entity) => Tuleh
	controlled (CM_NP, CM, Entity) => collection of luxurious and romantic clothes , including 1950s-style beaded dresses , lavishly printed cocktail pajamas and sable stoles
	controller (CM_NP, CM, Entity) => Patner
	controller (CM_NP, CM, Entity) => Bradley
	------------------------------


List(Causal, Event) => bonus led to the purchase of a house and a foothold in the middle class
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => bonus
	controlled (CM_NP, CM, Entity) => purchase of a house
	controlled (CM_NP, CM, Entity) => foothold in the middle class
	------------------------------


List(Causal, Event) => Tuleh , a collection of luxurious and romantic clothes , including 1950s-style beaded dresses , lavishly printed cocktail pajamas and sable stoles , was created by Patner and Bradley
	------------------------------
	Rule => create_1
	Type => EventMention
	------------------------------
	trigger => created
	controlled (CM_NP, CM, Entity) => Tuleh
	controlled (CM_NP, CM, Entity) => collection of luxurious and romantic clothes , including 1950s-style beaded dresses , lavishly printed cocktail pajamas and sable stoles
	controller (CM_NP, CM, Entity) => Patner
	controller (CM_NP, CM, Entity) => Bradley
	------------------------------


List(Causal, Event) => bonus led to the purchase of a house and a foothold in the middle class
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => bonus
	controlled (CM_NP, CM, Entity) => purchase of a house
	controlled (CM_NP, CM, Entity) => foothold in the middle class
	------------------------------


List(Causal, Event) => relationship with the other case led to its disclosure
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => relationship with the other case
	controlled (CM_NP, CM, Entity) => disclosure
	------------------------------


List(Causal, Event) => people died as a result of unacceptable care
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => people died
	controller (CM_NP, CM, Entity) => unacceptable care
	------------------------------


List(Causal, Event) => Rutgers starter James Wilson pitched well but made throwing errors on three bunts that led to three unearned runs
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => bunts
	controller (CM_event, CM, Entity) => Rutgers starter James Wilson pitched well but made throwing errors on three bunts
	controller (CM_event, CM, Entity) => throwing errors on three bunts
	controlled (CM_NP, CM, Entity) => unearned runs
	------------------------------


List(Causal, Event) => Mission MedVet was created six years ago by a veterinary surgeon
	------------------------------
	Rule => create_1
	Type => EventMention
	------------------------------
	trigger => created
	controlled (CM_NP, CM, Entity) => Mission MedVet
	controller (CM_NP, CM, Entity) => veterinary surgeon
	------------------------------


List(Causal, Event) => condition causes severe brain and liver damage and then
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => causes
	controlled (CM_NP, CM, Entity) => severe brain and liver damage and then
	controlled (CM_NP, CM, Entity) => severe brain and liver damage and then
	controlled (CM_NP, CM, Entity) => liver damage
	controller (CM_NP, CM, Entity) => condition
	------------------------------


List(Causal, Event) => looking for construction or other activity that might cause trouble
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => trouble
	controller (CM_NP, CM, Entity) => construction
	controller (CM_event, CM, Entity) => looking for construction or other activity
	controller (CM_NP, CM, Entity) => other activity
	controller (CM_event, CM, Entity) => looking for construction or other activity
	------------------------------


List(Causal, Event) => chickenpox virus itself can enter the central nervous system and cause the brain inflammation encephalitis
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => brain inflammation encephalitis
	controller (CM_NP, CM, Entity) => chickenpox virus
	controller (CM_event, CM, Entity) => chickenpox virus itself can enter the central nervous system
	controller (CM_NP, CM, Entity) => chickenpox
	controller (CM_NP, CM, Entity) => chickenpox virus
	controller (CM_event, CM, Entity) => chickenpox virus itself can enter the central nervous system
	------------------------------


List(Causal, Event) => Fever from a chickenpox infection can lead to dehydration serious enough
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => lead to
	controller (CM_NP, CM, Entity) => Fever
	controlled (CM_NP, CM, Entity) => dehydration serious enough
	------------------------------


List(Causal, Event) => chickenpox can cause serious birth defects
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => serious birth defects
	controller (CM_NP, CM, Entity) => chickenpox
	------------------------------


List(Causal, Event) => fallout from the `` Babe '' sequel led to Silver
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => fallout
	controlled (CM_NP, CM, Entity) => Silver
	------------------------------


List(Causal, Event) => study of the Amendment 's language and historical context , he said , caused him to believe that the provision had been cast aside too easily
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => caused
	controlled (CM_event, CM, Entity) => him to believe that the provision had been cast aside too easily
	controller (CM_NP, CM, Entity) => study of the Amendment 's language and historical context
	controller (CM_NP, CM, Entity) => study of the Amendment 's language and historical context
	controller (CM_NP, CM, Entity) => language
	controller (CM_NP, CM, Entity) => study of the Amendment 's language and historical context
	controller (CM_NP, CM, Entity) => historical context
	------------------------------


List(Causal, Event) => study of the Amendment 's language and historical context , he said , caused him to believe that the provision had been cast aside too easily
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => caused
	controlled (CM_event, CM, Entity) => him to believe that the provision had been cast aside too easily
	controller (CM_NP, CM, Entity) => study of the Amendment 's language and historical context
	controller (CM_NP, CM, Entity) => study of the Amendment 's language and historical context
	controller (CM_NP, CM, Entity) => language
	controller (CM_NP, CM, Entity) => study of the Amendment 's language and historical context
	controller (CM_NP, CM, Entity) => historical context
	------------------------------


List(Causal, Event) => legislative action was the result of a confluence of factors , from the enormously high stakes of next year 's presidential and congressional elections to the location of the violence , and from the vulnerability of the National Rifle Association to the growing discomfort of some Republicans
	------------------------------
	Rule => result_3
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_NP, CM, Entity) => legislative action
	controller (CM_NP, CM, Entity) => confluence of factors , from the enormously high stakes of next year 's presidential and congressional elections to the location of the violence , and from the vulnerability of the National Rifle Association to the growing discomfort of some Republicans
	------------------------------


List(Causal, Event) => legislative action was the result of a confluence of factors , from the enormously high stakes of next year 's presidential and congressional elections to the location of the violence , and from the vulnerability of the National Rifle Association to the growing discomfort of some Republicans
	------------------------------
	Rule => result_3
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_NP, CM, Entity) => legislative action
	controller (CM_NP, CM, Entity) => confluence of factors , from the enormously high stakes of next year 's presidential and congressional elections to the location of the violence , and from the vulnerability of the National Rifle Association to the growing discomfort of some Republicans
	------------------------------


List(Causal, Event) => cases that cause my parents ' friends to ask how I could defend those people
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_event, CM, Entity) => friends to ask how I could defend those people
	controller (CM_NP, CM, Entity) => cases
	------------------------------


List(Causal, Event) => cases that cause my parents ' friends to ask how I could defend those people
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_event, CM, Entity) => friends to ask how I could defend those people
	controller (CM_NP, CM, Entity) => cases
	------------------------------


List(Causal, Event) => Interruptions in power may cause you to lose the food
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_event, CM, Entity) => you to lose the food
	controller (CM_NP, CM, Entity) => Interruptions in power
	controller (CM_NP, CM, Entity) => Interruptions in power
	controller (CM_NP, CM, Entity) => power
	------------------------------


List(Causal, Event) => However , even `` harmless '' animals like deer can cross the road unexpectedly and cause traffic accidents
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => traffic accidents
	controller (CM_NP, CM, Entity) => harmless '' animals
	controller (CM_event, CM, Entity) => However , even `` harmless '' animals like deer can cross the road unexpectedly
	------------------------------


List(Causal, Event) => Animals and their manure can cause objectionable odors
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => objectionable odors
	controller (CM_NP, CM, Entity) => Animals
	controller (CM_NP, CM, Entity) => manure
	------------------------------


List(Causal, Event) => Interruptions in power may cause you to lose the food
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_event, CM, Entity) => you to lose the food
	controller (CM_NP, CM, Entity) => Interruptions in power
	controller (CM_NP, CM, Entity) => Interruptions in power
	controller (CM_NP, CM, Entity) => power
	------------------------------


List(Causal, Event) => However , even `` harmless '' animals like deer can cross the road unexpectedly and cause traffic accidents
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => traffic accidents
	controller (CM_NP, CM, Entity) => harmless '' animals
	controller (CM_event, CM, Entity) => However , even `` harmless '' animals like deer can cross the road unexpectedly
	------------------------------


List(Causal, Event) => Animals and their manure can cause objectionable odors
	------------------------------
	Rule => PosReg_syntax_1_verb
	Type => EventMention
	------------------------------
	trigger => cause
	controlled (CM_NP, CM, Entity) => objectionable odors
	controller (CM_NP, CM, Entity) => Animals
	controller (CM_NP, CM, Entity) => manure
	------------------------------


List(Causal, Event) => result of a bitterly fought 5-4 ruling , school districts are on notice
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => school districts are on notice
	controller (CM_NP, CM, Entity) => bitterly fought 5-4 ruling
	------------------------------


List(Causal, Event) => result of a bitterly fought 5-4 ruling , school districts are on notice
	------------------------------
	Rule => result_2
	Type => EventMention
	------------------------------
	trigger => result
	controlled (CM_event, CM, Entity) => school districts are on notice
	controller (CM_NP, CM, Entity) => bitterly fought 5-4 ruling
	------------------------------


List(Causal, Event) => Shelton sticks to the operational details , which has led to frustration and criticism
	------------------------------
	Rule => led_to_1
	Type => EventMention
	------------------------------
	trigger => led to
	controller (CM_NP, CM, Entity) => operational details
	controller (CM_event, CM, Entity) => Shelton sticks to the operational details
	controlled (CM_NP, CM, Entity) => frustration
	controlled (CM_NP, CM, Entity) => criticism
	------------------------------


