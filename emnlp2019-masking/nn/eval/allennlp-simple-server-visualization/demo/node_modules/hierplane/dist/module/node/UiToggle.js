'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Icon = require('../Icon.js');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UiToggle = function (_React$Component) {
  _inherits(UiToggle, _React$Component);

  function UiToggle() {
    _classCallCheck(this, UiToggle);

    return _possibleConstructorReturn(this, (UiToggle.__proto__ || Object.getPrototypeOf(UiToggle)).apply(this, arguments));
  }

  _createClass(UiToggle, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onUiMouseOver = _props.onUiMouseOver,
          onUiMouseOut = _props.onUiMouseOut,
          onUiMouseUp = _props.onUiMouseUp;


      return _react2.default.createElement(
        'div',
        { className: 'node__word__ui node__word__ui--toggle',
          onMouseOver: onUiMouseOver,
          onMouseOut: onUiMouseOut,
          onMouseUp: onUiMouseUp },
        _react2.default.createElement(
          'div',
          { className: 'node__word__ui__glyph' },
          _react2.default.createElement(_Icon2.default, { symbol: 'expand', wrapperClass: 'node__word__ui__glyph__svg node__word__ui__glyph__svg--expand' }),
          _react2.default.createElement(_Icon2.default, { symbol: 'collapse', wrapperClass: 'node__word__ui__glyph__svg node__word__ui__glyph__svg--collapse' })
        )
      );
    }
  }]);

  return UiToggle;
}(_react2.default.Component);

UiToggle.propTypes = {
  onUiMouseOver: _react.PropTypes.func,
  onUiMouseOut: _react.PropTypes.func,
  onUiMouseUp: _react.PropTypes.func
};

exports.default = UiToggle;