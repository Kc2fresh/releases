'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _NodeWord = require('./NodeWord.js');

var _NodeWord2 = _interopRequireDefault(_NodeWord);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _helpers = require('../helpers.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Converts an array of classes to string.
function stylesToString() {
  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  return arr.reduce(function (str, style) {
    return "node--" + style + " " + str;
  }, "");
}

var MiddleParent = function (_Component) {
  _inherits(MiddleParent, _Component);

  function MiddleParent() {
    _classCallCheck(this, MiddleParent);

    return _possibleConstructorReturn(this, (MiddleParent.__proto__ || Object.getPrototypeOf(MiddleParent)).apply(this, arguments));
  }

  _createClass(MiddleParent, [{
    key: 'render',


    // TODO: Try to pull as much business logic out of the render function as possible.
    value: function render() {
      var _classNames;

      var _props = this.props,
          readOnly = _props.readOnly,
          canonicalChildren = _props.canonicalChildren,
          hasChildren = _props.hasChildren,
          hasSideChildren = _props.hasSideChildren,
          hasInsideChildren = _props.hasInsideChildren,
          hasDownChildren = _props.hasDownChildren,
          layout = _props.layout,
          positions = _props.positions,
          linkLabels = _props.linkLabels,
          data = _props.data,
          depth = _props.depth,
          styles = _props.styles,
          active = _props.active,
          collapsed = _props.collapsed,
          nodeFocusing = _props.nodeFocusing,
          dataCollapsable = _props.dataCollapsable,
          rollups = _props.rollups,
          isRoot = _props.isRoot,
          isSingleSegment = _props.isSingleSegment,
          isEventRoot = _props.isEventRoot,
          onMouseOver = _props.onMouseOver,
          onMouseOut = _props.onMouseOut,
          onMouseDown = _props.onMouseDown,
          onMouseUp = _props.onMouseUp,
          onUiMouseOver = _props.onUiMouseOver,
          onUiMouseOut = _props.onUiMouseOut,
          onUiMouseUp = _props.onUiMouseUp,
          onPnMouseOver = _props.onPnMouseOver,
          onPnMouseOut = _props.onPnMouseOut,
          onPnMouseUp = _props.onPnMouseUp,
          text = _props.text,
          parentId = _props.parentId,
          togglePane = _props.togglePane,
          insideChildren = _props.insideChildren,
          directionalChildIndex = _props.directionalChildIndex,
          dataPos = _props.dataPos,
          eventSeqChild = _props.eventSeqChild,
          encapsulated = _props.encapsulated,
          notFirstInsideChild = _props.notFirstInsideChild,
          seqType = _props.seqType,
          focused = _props.focused;
      var id = data.id,
          nodeType = data.nodeType;


      var altParseInfo = data.alternateParseInfo;
      var altParses = altParseInfo !== undefined && (altParseInfo.hasOwnProperty("prevParse") || altParseInfo.hasOwnProperty("nextParse"));
      var nodeCollapsed = dataCollapsable && collapsed && (!hasSideChildren || hasSideChildren && hasInsideChildren) && !isRoot && !isEventRoot;

      // nodeConditionalClasses builds dynamic class lists for .node blocks:
      var nodeConditionalClasses = (0, _bind2.default)((_classNames = {
        "node--root": isRoot,
        "node--has-alt-parses": altParses,
        "node--hover": active === "hover",
        "node--toggle-ready": active === "toggle-ready",
        "node--focused": focused,
        "node--focusing": nodeFocusing,
        "node--encapsulated": encapsulated,
        "node-container--collapsed": nodeCollapsed,
        "node-container--expanded": !nodeCollapsed,
        "node-container--active": active !== null && hasChildren && !hasSideChildren
      }, _defineProperty(_classNames, '' + stylesToString(styles[data.nodeType]), true), _defineProperty(_classNames, 'node--' + (0, _helpers.colorToString)(styles[seqType]), seqType !== null), _classNames));

      // Screen Output
      return _react2.default.createElement(
        'div',
        { className: 'ft__tr__td ft--middle-parent' },
        _react2.default.createElement(
          'div',
          { className: 'node ' + nodeConditionalClasses,
            id: id,
            'data-parent-id': depth > 0 ? parentId : "null",
            'data-node-type': nodeType,
            'data-pos': dataPos,
            'data-is-root': isRoot,
            'data-is-single-segment': isSingleSegment,
            'data-is-event-root': isEventRoot,
            'data-depth': depth,
            'data-has-children': hasChildren,
            'data-has-side-children': hasSideChildren,
            'data-has-inside-children': hasInsideChildren,
            'data-has-down-children': hasDownChildren,
            'data-collapsable': dataCollapsable,
            'data-directional-child-index': directionalChildIndex,
            'data-alt-parses': altParses },
          _react2.default.createElement(_NodeWord2.default, {
            readOnly: readOnly,
            depth: depth,
            layout: layout,
            dataPos: dataPos,
            positions: positions,
            linkLabels: linkLabels,
            data: data,
            text: text,
            dataCollapsable: dataCollapsable,
            altParses: altParses,
            rollups: rollups,
            isRoot: isRoot,
            isEventRoot: isEventRoot,
            hasChildren: hasChildren,
            hasSideChildren: hasSideChildren,
            hasInsideChildren: hasInsideChildren,
            onMouseOver: onMouseOver,
            onMouseOut: onMouseOut,
            onMouseDown: onMouseDown,
            onMouseUp: onMouseUp,
            onUiMouseOver: onUiMouseOver,
            onUiMouseOut: onUiMouseOut,
            onUiMouseUp: onUiMouseUp,
            onPnMouseOver: onPnMouseOver,
            onPnMouseOut: onPnMouseOut,
            onPnMouseUp: onPnMouseUp,
            togglePane: togglePane,
            insideChildren: insideChildren,
            encapsulated: encapsulated,
            eventSeqChild: eventSeqChild,
            notFirstInsideChild: notFirstInsideChild }),
          canonicalChildren
        )
      );
    }
  }]);

  return MiddleParent;
}(_react.Component);

MiddleParent.propTypes = {
  readOnly: _react.PropTypes.bool,
  styles: _react.PropTypes.object.isRequired,
  positions: _react.PropTypes.object.isRequired,
  linkLabels: _react.PropTypes.object.isRequired,
  data: _react.PropTypes.shape({
    id: _react.PropTypes.string,
    kind: _react.PropTypes.string,
    word: _react.PropTypes.string,
    attributes: _react.PropTypes.arrayOf(_react.PropTypes.string.isRequired),
    children: _react.PropTypes.arrayOf(_react.PropTypes.object.isRequired),
    link: _react.PropTypes.string
  }),
  text: _react.PropTypes.string,
  depth: _react.PropTypes.number.isRequired,
  layout: _react.PropTypes.string.isRequired,
  hasChildren: _react.PropTypes.bool.isRequired,
  hasSideChildren: _react.PropTypes.bool.isRequired,
  hasInsideChildren: _react.PropTypes.bool,
  hasDownChildren: _react.PropTypes.bool,
  canonicalChildren: _react.PropTypes.object,
  active: _react.PropTypes.string,
  collapsed: _react.PropTypes.bool.isRequired,
  nodeFocusing: _react.PropTypes.bool.isRequired,
  dataCollapsable: _react.PropTypes.bool.isRequired,
  rollups: _react.PropTypes.bool.isRequired,
  isRoot: _react.PropTypes.bool.isRequired,
  isSingleSegment: _react.PropTypes.bool,
  isEventRoot: _react.PropTypes.bool.isRequired,
  onMouseOver: _react.PropTypes.func.isRequired,
  onMouseOut: _react.PropTypes.func.isRequired,
  onMouseDown: _react.PropTypes.func.isRequired,
  onMouseUp: _react.PropTypes.func.isRequired,
  onUiMouseOver: _react.PropTypes.func.isRequired,
  onUiMouseOut: _react.PropTypes.func.isRequired,
  onUiMouseUp: _react.PropTypes.func.isRequired,
  onPnMouseOver: _react.PropTypes.func.isRequired,
  onPnMouseOut: _react.PropTypes.func.isRequired,
  onPnMouseUp: _react.PropTypes.func.isRequired,
  togglePane: _react.PropTypes.func,
  parentId: _react.PropTypes.string,
  insideChildren: _react.PropTypes.object,
  directionalChildIndex: _react.PropTypes.number,
  dataPos: _react.PropTypes.string,
  eventSeqChild: _react.PropTypes.bool,
  encapsulated: _react.PropTypes.bool,
  notFirstInsideChild: _react.PropTypes.bool,
  seqType: _react.PropTypes.string,
  focused: _react.PropTypes.bool
};

exports.default = MiddleParent;